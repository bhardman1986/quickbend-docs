(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{119:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return l}));var a=n(2),r=(n(0),n(130));const i={id:"trigonometry",title:"Trigonometry"},o={id:"trigonometry",isDocsHomePage:!1,title:"Trigonometry",description:"Trigonometry, is a branch of mathematics specifically dealing with the sides and angles of triangles. Trigonometry is a key part of conduit bending. Fortunately every type of bend is based off of a right triangle.",source:"@site/docs/Trigonometry.md",permalink:"/quickbend-docs/docs/trigonometry",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/Trigonometry.md",sidebar:"someSidebar",previous:{title:"Introduction",permalink:"/quickbend-docs/docs/introduction"},next:{title:"Centerline Radius",permalink:"/quickbend-docs/docs/centerline-radius"}},c=[{value:"Terms",id:"terms",children:[]},{value:"Basic Formulas",id:"basic-formulas",children:[]},{value:"Multiplier (Cosecant) Method",id:"multiplier-cosecant-method",children:[{value:"Multipliers",id:"multipliers",children:[]},{value:"Shrink Constant",id:"shrink-constant",children:[]},{value:"Common Multipliers and Shrink Constants",id:"common-multipliers-and-shrink-constants",children:[]}]}],b={rightToc:c};function l({components:e,...t}){return Object(r.b)("wrapper",Object(a.a)({},b,t,{components:e,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Trigonometry, is a branch of mathematics specifically dealing with the sides and angles of triangles. Trigonometry is a key part of conduit bending. Fortunately every type of bend is based off of a right triangle."),Object(r.b)("h2",{id:"terms"},"Terms"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Right Triangle"),": A triangle with one right angle (having exactly 90\xb0)."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Theta (\u03b8)"),":  The two unknown angles of the right triangle other than the right angle."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Opposite"),": The opposite side of the triangle from that of the theta."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Adjacent"),": The side of the triangle that\u2019s next to the theta."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Hypotenuse"),": The longest side of a right triangle, opposite of the right angle.")),Object(r.b)("h2",{id:"basic-formulas"},"Basic Formulas"),Object(r.b)("p",null,"There's three basic formulas for trigonometry. The values of these formulas play a huge role in determining the unknown sides and angles of a triangle."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Sine"),": Sin(\u03b8) = Opposite/Hypotenuse"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Cosine"),": Cos(\u03b8) = Adjacent/Hypotenuse"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Tangent"),": Tan(\u03b8) = Opposite/Adjacent")),Object(r.b)("h2",{id:"multiplier-cosecant-method"},"Multiplier (Cosecant) Method"),Object(r.b)("p",null,"Typically when bending conduit you decide the theta, and the hypotenuse (distance between bends) is the unknown value. In order to find these unknown values quickly by hand we\u2019ll use the multiplier method."),Object(r.b)("p",null,"This is the most common method to conduit bending. It uses the cosecant (1/sin) from the theta (bend). Then by multiplying that value by the opposite (Rise) you\u2019re able to determine the distance needed for the hypotenuse (Distance Between Bends)."),Object(r.b)("div",{className:"admonition admonition-important alert alert--info"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"important")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"While the cosecant method isn't incorrect the accuracy may vary when it comes to larger sized conduits, shoe radiuses, and bends."))),Object(r.b)("h3",{id:"multipliers"},"Multipliers"),Object(r.b)("p",null,"A multiplier is a value created by taking the reciprocal of the sine from theta and then multiply that value by the opposite. The multiplier is usually simplified by set degree marks that are common bends. Such as 10\u02da, 22.5\u02da, 30\u02da, 45\u02da, and 60\u02da."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},Object(r.b)("strong",{parentName:"p"},"1/Sin(\u03b8) \u2022 Opposite")))),Object(r.b)("h3",{id:"shrink-constant"},"Shrink Constant"),Object(r.b)("p",null,"The shrink constant is a multiplier to determine the amount of conduit that's lost after the bend is completed (Shrink). The shrink constant is determined by taking the tangent and of the theta (Bend) by 2. After determining the shrink constant take that value and multiply it by the opposite (Rise)."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},Object(r.b)("strong",{parentName:"p"},"Tan(\u03b8)/2 \u2022 Opposite")))),Object(r.b)("h3",{id:"common-multipliers-and-shrink-constants"},"Common Multipliers and Shrink Constants"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Theta"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:"right"}),"Multiplier"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:"right"}),"Shrink Constant"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"5\u02da"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"right"}),"11.47"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"right"}),"0.04")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"10\u02da"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"right"}),"5.75"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"right"}),"0.08")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"15\u02da"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"right"}),"3.86"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"right"}),"0.13")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"22.5"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"right"}),"2.61"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"right"}),"0.2")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"30\u02da"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"right"}),"2"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"right"}),"0.27")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"45\u02da"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"right"}),"1.41"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"right"}),"0.41")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"60\u02da"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"right"}),"1.15"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"right"}),"0.58")))))}l.isMDXComponent=!0},130:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return h}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),s=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=s(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,l=b(e,["components","mdxType","originalType","parentName"]),d=s(n),p=a,h=d["".concat(o,".").concat(p)]||d[p]||m[p]||i;return n?r.a.createElement(h,c(c({ref:t},l),{},{components:n})):r.a.createElement(h,c({ref:t},l))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=p;var c={};for(var b in t)hasOwnProperty.call(t,b)&&(c[b]=t[b]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);